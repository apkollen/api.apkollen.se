generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model BsProduct {
  articleNbr                Int                         @id @default(autoincrement()) @map("article_nbr")
  url                       String
  productName               String                      @map("product_name")
  category                  String
  subcategory               String
  BsProductHistoryEntry     BsProductHistoryEntry[]
  BsProductReview           BsProductReview?
  DeadBsProductHistoryEntry DeadBsProductHistoryEntry[] @relation("bs_productTodead_bs_product_history_entry")
  CurrentBsProductRank      CurrentBsProductRank?

  @@map("bs_product")
}

model BsProductHistoryEntry {
  unitVolume     Float     @map("unit_volume")
  unitPrice      Float     @map("unit_price")
  alcvol         Float
  apk            Float
  articleNbr     Int       @map("bs_product_article_nbr")
  retrieved_date DateTime  @default(now())
  BsProduct      BsProduct @relation(fields: [articleNbr], references: [articleNbr], onDelete: NoAction, onUpdate: NoAction)

  @@id([articleNbr, retrieved_date])
  @@map("bs_product_history_entry")
}

model BsProductReview {
  articleNbr          Int       @id @default(autoincrement()) @map("bs_product_article_nbr")
  score               Float     @map("review_score")
  text                String    @map("review_text")
  reviewerName        String    @map("reviewer_name")
  review_created_date DateTime  @default(now())
  BsProduct           BsProduct @relation(fields: [articleNbr], references: [articleNbr], onDelete: NoAction, onUpdate: NoAction)

  @@map("bs_product_review")
}

model DeadBsProductHistoryEntry {
  articleNbr          Int       @map("bs_product_article_nbr")
  marked_dead_date    DateTime  @default(now())
  marked_revived_date DateTime?
  BsProduct           BsProduct @relation("bs_productTodead_bs_product_history_entry", fields: [articleNbr], references: [articleNbr], onDelete: NoAction, onUpdate: NoAction)

  @@id([articleNbr, marked_dead_date])
  @@map("dead_bs_product_history_entry")
}

// Views, to be manually updated

model CurrentBsProductRank {
  articleNbr  Int       @id @map("bs_product_article_nbr")
  currentRank Int       @unique @map("current_rank")
  BsProduct   BsProduct @relation(fields: [articleNbr], references: [articleNbr], onDelete: NoAction, onUpdate: NoAction)

  @@map("current_bs_product_rank")
}
