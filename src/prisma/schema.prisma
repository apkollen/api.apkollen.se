// Do NOT run prisma migration with this schema, it will just
// mess everything up!

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model BsProduct {
  articleNbr         Int                          @id @default(autoincrement()) @map("article_nbr")
  url                String
  productName        String                       @map("product_name")
  category           String
  subcategory        String
  latestHistoryEntry LatestBsProductHistoryEntry?
  history            BsProductHistoryEntry[]
  review             BsProductReview?
  markedDeadHistory  DeadBsProductHistoryEntry[]  @relation("bs_productTodead_bs_product_history_entry")
  currentRank        CurrentBsProductRank?

  @@map("bs_product")
}

model BsProductHistoryEntry {
  unitVolume    Float     @map("unit_volume")
  unitPrice     Float     @map("unit_price")
  alcvol        Float
  apk           Float
  articleNbr    Int       @map("bs_product_article_nbr")
  retrievedDate DateTime  @default(now()) @map("retrieved_date")
  product       BsProduct @relation(fields: [articleNbr], references: [articleNbr], onDelete: NoAction, onUpdate: NoAction)

  @@id([articleNbr, retrievedDate])
  @@map("bs_product_history_entry")
}

model BsProductReview {
  articleNbr        Int       @id @default(autoincrement()) @map("bs_product_article_nbr")
  score             Float     @map("review_score")
  text              String    @map("review_text")
  reviewerName      String    @map("reviewer_name")
  reviewCreatedDate DateTime  @default(now()) @map("review_created_date")
  product           BsProduct @relation(fields: [articleNbr], references: [articleNbr], onDelete: NoAction, onUpdate: NoAction)

  @@map("bs_product_review")
}

model DeadBsProductHistoryEntry {
  articleNbr        Int       @map("bs_product_article_nbr")
  markedDeadDate    DateTime  @default(now()) @map("marked_dead_date")
  markedRevivedDate DateTime? @map("marked_revived_date")
  product           BsProduct @relation("bs_productTodead_bs_product_history_entry", fields: [articleNbr], references: [articleNbr], onDelete: NoAction, onUpdate: NoAction)

  @@id([articleNbr, markedDeadDate])
  @@map("dead_bs_product_history_entry")
}

// Views, to be manually updated

model CurrentBsProductRank {
  articleNbr  Int       @id @map("bs_product_article_nbr")
  currentRank Int       @unique @map("current_rank")
  product     BsProduct @relation(fields: [articleNbr], references: [articleNbr], onDelete: NoAction, onUpdate: NoAction)

  @@map("current_bs_product_rank")
}

// Required for sorting on apk and such
model LatestBsProductHistoryEntry {
  unitVolume    Float     @map("unit_volume")
  unitPrice     Float     @map("unit_price")
  alcvol        Float
  apk           Float
  articleNbr    Int       @unique @map("bs_product_article_nbr")
  retrievedDate DateTime  @default(now()) @map("retrieved_date")
  product       BsProduct @relation(fields: [articleNbr], references: [articleNbr], onDelete: NoAction, onUpdate: NoAction)

  @@id([articleNbr, retrievedDate])
  @@map("latest_bs_product_history_entry")
}
